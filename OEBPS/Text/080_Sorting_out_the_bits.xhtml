<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Sorting out the bits</title>
  <link href="../Styles/Global.css" rel="stylesheet" type="text/css" />
</head>

<body>
  <h1>Sorting Out The Bits</h1>

  <p>In the previous chapter, there has been a lively conversation between Johnny and Benjamin. Even in such a short session, Benjamin, as a TDD novice, had a lot of questions and a lot of things he needed sorted out. We will pick up all those questions and explain them one by one. Here they are:</p>

  <ul>
    <li>How to name a Statement?</li>

    <li>How to start writing a Statement?</li>

    <li>How is TDD about analysis and what does this “GIVEN-WHEN-THEN” mean?</li>

    <li>What exactly is the scope of a Statement? A class, a method, or something else?</li>

    <li>What is the role of TODO list in TDD?</li>

    <li>Why use anonymous generated values instead of literals as input of a specified behavior?</li>

    <li>Why and how to use the Any class?</li>

    <li>What code to extract from a Statement to shared utility method?</li>

    <li>Why such a strange approach to create enumerated constants?</li>
  </ul>

  <p>A lot of questions, isn’t it? It is unfortunate that TDD has this high entry barrier, at least for someone used to the traditional way of writing code. Anyway, that is what this tutorial is for - to answer such questions and lower this barrier. Thus, we will try to answer those questions one by one.</p>
</body>
</html>
