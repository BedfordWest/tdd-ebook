<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title></title>
</head>

<body>
  <h2>How is TDD about analysis and what's with the GIVEN-WHEN-THEN mantra?</h2>

  <h2>How to name a Statement?</h2>

  <h2>How to start writing a Statement?</h2>

  <h2>What exactly is the scope of a Statement? A class, a method, or something else?</h2>

  <h2>What's the role of TODO list in TDD?</h2>

  <h2>Why use anonymous generated values instead of literals as input of a specified behavior?</h2>

  <h2>Why and how to use the Any class?</h2>

  <h2>What code to extract from a Statement to shared utility method?</h2>

  <h2>Why such a strange approach to create enumerated constants?</h2>

  <p>TODO</p>

  <h2>Expanded TDD process</h2>

  <p>As a little introduction, I'll show you an expanded version of TDD flow that we'll be using:</p>

  <ol>
    <li>Examine TODO list and pick an item that makes most sense to implement next</li>

    <li>Write unfulfilled Statement</li>

    <li>Make it unfulfilled for the right reason</li>

    <li>Fulfill the Statement and make sure all already fulfilled Statements are still fulfilled</li>

    <li>Cross out the item from TODO list</li>

    <li>Repeat until no item is left on the TODO list</li>
  </ol>

  <p>Some of the steps don't probably mean anything to yet. Don't worry, we'll be reiterating them several times, so don't try to memorize them now.</p>

  <h2 id="sigil_toc_id_25">A TODO list</h2>

  <p>One interesting thing to note when we look at the steps above is that we'll be maintaining a TODO list. What is it for? You'll have to see for yourself! The only thing that I'd like to tell you up-front is that the process above doesn't include a step where you add something to the TODO list. This is because you're free to expand your TODO list anytime. This can even be halfway writing your current Statement that an idea or a new behavior occurs to you. In such situation, not get distracted from your current task, you add the new item to the TODO list and get back to it later (hence the step 1 of this process).</p>

  <div>
    <br />
  </div>

  <h1>What exactly do we specify?</h1>

  <p>In this chapter, we'll look a little bit on what it is that we actually write our specification against - what exactly do we want to describe about a class. We're gonna jump into a quick example, because I've been keeping you away from practice too long now. Note that the example won't exactly show how the real-world TDD looks like, but it will be enough to draw some conclusions and get a feel of Statement-First style of programming.</p>

  <h2 id="sigil_toc_id_26">quick example (list? calculator?)</h2>

  <p>TODO - todo list</p>

  <h2 id="sigil_toc_id_27">Analysis in TDD - GIVEN-WHEN-THEN step</h2>

  <h2 id="sigil_toc_id_28">Should</h2>
</body>
</html>
