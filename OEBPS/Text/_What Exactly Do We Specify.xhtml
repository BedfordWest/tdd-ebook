<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title></title>
  <link href="../Styles/Global.css" rel="stylesheet" type="text/css" />
</head>

<body>
  <h2><br /></h2>

  <h2>What exactly is the scope of a Statement? A class, a method, or something else?</h2>

  <h2 id="sigil_toc_id_51">What code to extract from a Statement to shared utility method?<br /></h2>

  <h2 id="sigil_toc_id_54">Why such a strange approach to create enumerated constants?</h2>

  <p>TODO</p>

  <h2 id="sigil_toc_id_55">Expanded TDD process</h2>

  <p>As a little introduction, I'll show you an expanded version of TDD flow that we'll be using:</p>

  <ol>
    <li>Examine TODO list and pick an item that makes most sense to implement next</li>

    <li>Write unfulfilled Statement</li>

    <li>Make it unfulfilled for the right reason</li>

    <li>Fulfill the Statement and make sure all already fulfilled Statements are still fulfilled</li>

    <li>Cross out the item from TODO list</li>

    <li>Repeat until no item is left on the TODO list</li>
  </ol>

  <p>Some of the steps don't probably mean anything to yet. Don't worry, we'll be reiterating them several times, so don't try to memorize them now.</p>

  <h2 id="sigil_toc_id_56">What exactly do we specify?<br /></h2>

  <p>In this chapter, we'll look a little bit on what it is that we actually write our specification against - what exactly do we want to describe about a class. We're gonna jump into a quick example, because I've been keeping you away from practice too long now. Note that the example won't exactly show how the real-world TDD looks like, but it will be enough to draw some conclusions and get a feel of Statement-First style of programming.</p>

  <h2 id="sigil_toc_id_58">quick example (list? calculator?)</h2>

  <p>TODO - todo list</p>
</body>
</html>
